<%--
 =================================================================
  Licensed Materials - Property of IBM

  WebSphere Commerce

  (C) Copyright IBM Corp. 2003, 2009 All Rights Reserved.

  US Government Users Restricted Rights - Use, duplication or
  disclosure restricted by GSA ADP Schedule Contract with
  IBM Corp.
 =================================================================
--%>

<%-- 
  *****
  * This file retrieves and prepares a lot of information which are used by all the store JSP files.
  * This file creates JSTL variables which can just be referenced by the store JSP files that include
  * it.
  *****
--%>

<%@ taglib uri="http://java.sun.com/jsp/jstl/functions" prefix="fn"%>
<%@ page session="false"%>
<%@ page pageEncoding="UTF-8"%>
<%--
  ****
  * BEGIN Comment out for use in the JSP preview environment.
--%>
<%@ page import="javax.servlet.jsp.jstl.fmt.LocalizationContext" %>
<%@ page import="java.util.Locale" %>
<%@ page import="com.ibm.commerce.command.CommandContext" %>
<%@ page import="com.ibm.commerce.server.ECConstants" %>
<%@ page import="com.ibm.commerce.datatype.WcParam" %>
<%@ page errorPage="/GenericJSPPageError.jsp" %>
<%
// check to see if the wcparam is available; initialise it if it is not available
if( null == request.getAttribute(com.ibm.commerce.server.ECConstants.EC_INPUT_PARAM)){
	request.setAttribute(com.ibm.commerce.server.ECConstants.EC_INPUT_PARAM, new WcParam(request));
}
%>
<%--
  * END Comment out for use in the JSP preview environment.
  ****
--%>


<%-- The commerce useBean tag is used to activate the StoreDataBean --%>
<wcbase:useBean id="sdb" classname="com.ibm.commerce.common.beans.StoreDataBean" scope="request" />

<%-- This flow tag is used to change styles --%>
<flow:fileRef id="vfileColor" fileId="vfile.color"/>
<flow:fileRef id="StyleDir" fileId="StyleDir"/>
<flow:fileRef id="vfileStylesheet" fileId="vfile.stylesheet"/>
<flow:fileRef id="vfileStylesheetie" fileId="vfile.stylesheetie"/>
<flow:fileRef id="vfileStylesheetie7" fileId="vfile.stylesheetie7"/>
<flow:fileRef id="vfileStylesheetprint" fileId="vfile.stylesheetprint"/>
<flow:fileRef id="vfileColorBIDI" fileId="vfile.color"/>

<%-- These are variables to use on pages --%>
<c:set var="locale" value="${CommandContext.locale}" scope="page" />
<c:set var="langId" value="${CommandContext.languageId}" scope="page" />
<c:set var="storeName" value="${sdb.storeEntityDescriptionDataBean.displayName}" scope="page" />
<c:choose>
       <c:when test="${CommandContext.locale eq 'iw_IL'}">
              <c:set var="shortLocale" value="he"/>
       </c:when>
       <c:otherwise>
              <c:set var="shortLocale" value="${fn:substring(CommandContext.locale,0,2)}"/>
       </c:otherwise>
</c:choose>

<%-- A flag to determine if this is a B2B store or not. --%>
<c:set var="b2bStore" value="true"/>
<c:set var="displayListPriceInProductPage" value="false"/>


<%-- These are variables to pass to the cached pages --%>
<c:set var="userType" value="${CommandContext.user.registerType}" scope="page" />
<c:set var="lastCmdName" value="${CommandContext.commandName}" scope="page" />
<c:set var="storeId" value="${CommandContext.storeId}"/>
<c:set var="catalogId" value="${WCParam.catalogId}"/>
<c:set var="userId" value="${CommandContext.userId}"/>
<c:if test="${CommandContext.locale == 'iw_IL'}" >
	<c:set var="vfileColorBIDI" value="${vfileColorBIDI}/bidi/"/>
</c:if>

<%-- 
  *****
  * For CategoryDisplay command, we can use the parameter called "catalogIdentifier" to identify the catalog instead of using the "catalogId".
  * This command will then resolve the catalogId based on the Identifier and pass it as an attribute.
  * In this specific case, the catalogId is not available in WCParam.
  * We will get the catalogId from the scope and put it in the WCParam. 
  *****
--%>

<c:if test="${empty WCParam.catalogId}" >
	<c:set target="${WCParam}" property="catalogId" value="${catalogId}" />
</c:if>

<%-- URL pointing to the hosted store home directory.  Use this to reference images --%>
<c:set var="storeImgDir" value="${sdb.filePath}" scope="page" />
<%-- WebAsset directory of the hosted store.  Includes JSPs, HTML, Image files, etc --%>
<c:set var="storeDir" value="${sdb.jspPath}" scope="page" />

<%-- URL pointing to the shared image directory.  Use this to reference images --%>
<c:set var="jspStoreImgDir" value="${sdb.jspStoreDirFilePath}" scope="page" />
<%-- WebAsset directory of the shared file directory.  Includes JSPs, HTML, Image files, etc --%>
<c:set var="jspStoreDir" value="/${sdb.jspStoreDir}/" scope="page" />

<%-- Path used to retrieve the JavaScript assets.  Use this to reference your JavaScript files. --%>
<c:set var="jsAssetsDir" value="${sdb.jspStoreDirFilePath}" scope="page" />

<%--
Example directories:
storeImgDir - /wcsstore/<hostedstoredir>/
jspStoreImgDir - /wcsstore/<sharedstorefrontassetstoredir>/ 
storeDir - /<hostedstoredir>/
jspStoreDir - /<sharedstorefrontassetstoredir>/ 
--%>


<%-- Load the store bundles --%>
<fmt:setLocale value="${CommandContext.locale}" />
<fmt:setBundle basename="${jspStoreDir}storetext" var="storeText" />

<%--
  ****
  * BEGIN Comment out for use in the JSP preview environment.
--%>
<%
// The store databean must load the resource bundle for dynamic text. This is so that it can 
// reload the resource bundle when there is a text change in the Change Pages tool.
LocalizationContext storeDynamicTextContext = (LocalizationContext) request.getAttribute("storeDynamicText");
if (storeDynamicTextContext == null){
	CommandContext cmdcontext = (CommandContext) request.getAttribute(ECConstants.EC_COMMANDCONTEXT);
	Locale locale = cmdcontext.getLocale();
	storeDynamicTextContext = new LocalizationContext(sdb.getResourceBundle("storetext_dynamic"), locale);
	request.setAttribute("storeDynamicText", storeDynamicTextContext);
}
%>
<c:set var="storeDynamicText" value="${requestScope.storeDynamicText}"/>

<%--
  * END Comment out for use in the JSP preview environment.
  ***
--%>

<%--
  ****
  * BEGIN Uncomment for use in the JSP preview environment.
--%>
<%--
<fmt:setBundle basename="${jspStoreDir}storetext_dynamic var="storeDynamicText" />
--%>
<%--
  * END Uncomment for use in the JSP preview environment.
  ****
--%>

<%--	currency symbol of this store 
			example usage:
			<c:out value="${currencyFormatterDB.currencySymbol}" escapeXml="false"/>
--%>
<wcbase:useBean id="currencyFormatterDB" classname="com.ibm.commerce.common.beans.StoreCurrencyFormatDescriptionDataBean" scope="request" >
	<c:set property="storeId" value="${storeId}" target="${currencyFormatterDB}" />
	<c:set property="langId" value="${langId}" target="${currencyFormatterDB}" />
	<c:set property="currencyCode" value="${CommandContext.currency}" target="${currencyFormatterDB}" />
	<c:set property="numberUsage" value="-1" target="${currencyFormatterDB}" />
</wcbase:useBean>

<%-- Set decimal places to use for currency --%>

<c:set var="currencyDecimal" value="${currencyFormatterDB.decimalPlaces}"/>

<c:if test="${CommandContext.currency == 'KRW'}">
	<c:set property="currencySymbol" value='&#8361;' target="${currencyFormatterDB}"/>
</c:if>
<c:set var="dojolocale" value="${fn:replace(locale, '_' , '-')}" />
<c:set var="dojolocale" value="${fn:toLowerCase(dojolocale)}" />
<c:set var="dojoFile" value="${staticAssetContextRoot}/dojo131/dojo/dojo.js"/>
<c:set var="dojoConfigParams" value="parseOnLoad: false, isDebug: false, useCommentedJson: true,locale: '${dojolocale}' "/>

<c:set var="request" value="${pageContext.request}"/>
<c:choose>
	<c:when test="${request.serverPort != 80 && request.serverPort != 443}">
		<c:set var="portUsed" value=":${request.serverPort}"/>
	</c:when>
	<c:otherwise>
		<c:set var="portUsed" value=""/>
	</c:otherwise>
</c:choose>
<c:set var="contextPathUsed" value=""/>
<c:set var="absoluteUrl" value=""/>
<c:if test="${!empty requestScope['requestURIPath'] && requestScope['requestURIPath'] != null && !empty requestScope['requestServletPath'] && requestScope['requestServletPath'] != null}">
	<c:set var="contextPathUsed" value="${fn:substringBefore(requestScope['requestURIPath'],requestScope['requestServletPath'])}"/>
	<c:set var="absoluteUrl" value="${request.scheme}://${request.serverName}${portUsed}${contextPathUsed}${requestScope['requestServletPath']}/"/>
</c:if>

<c:set var="profileShippingNickname" value="Default_Shipping_${storeId}"/>
<c:set var="profileBillingNickname" value="Default_Billing_${storeId}"/>

<%-- Defines the maximum number of sub categories that are displayed for each top category in the sidebar. --%>
<c:set var="maxSubCategoriesPerCategoryInSidebar" value="18" scope="request"/>
<c:set var="maxTotalCategoriesInSidebar" value="40" scope="request"/>
<c:set var="maxTopCategoriesInHeader" value="4" scope="request"/>
<c:set var="maxOrderItemsPerPage" value="20"/>
<c:set var="maxOrderItemsToInspect" value="50"/>

<%-- Defines the maximum number of orders on a page for the saved orders list --%>
<c:set var="savedOrdersPageSize" value="20"/>

<%-- Maximum number of menu items to show in each column of the header menu. --%>
<c:set var="maxItemsPerColumn" value="6"/>

<%-- Determines whether or not the show all menu item is displayed even when all the menu items can be displayed for a particular menu.
If set to true then the show all menu item will always be displayed.
If set to false then the show all menu item will only be displayed if there are to many menu items to be displayed in the menu. --%>
<c:set var="forceDisplayShowAll" value="false"/>

<%-- For the Coremetrics enablement, the store assumes that the Coremetrics javascript libraries are placed inside 'Stores.war/coremetrics' folder --%>
<c:set var="coremetricsJSDir" value="/wcsstore/coremetrics/"/>

<%-- These variables are used to determine if the corresponding orders will be categorized and displayed in the order status section. --%>
<c:set var="showProcessedOrders" value="true"/>
<c:set var="showWaitingForApprovalOrders" value="true"/>
<c:set var="showScheduledOrders" value="true"/>

<%-- The variable showPONumber is used to indicate if the purchase order number should be displayed for this store. --%>
<c:set var="showPONumber" value="true"/>

<%-- This variable is used to determine if in the Privacy Policy section, we should show Children's Policy --%>
<c:set var="showChildrenPrivacyPolicy" value="false"/>

<%-- Default view in which products are displayed--%>
<c:set var="defaultPageView" value="detailed"/>

<%-- The variable showOrgLogoName is used to determine if the organization logo and name should be displayed in the header and in My Account. --%>
<c:set var="showOrgLogoName" value="true"/>

<%-- This variable is used to determine if Header Links can be displayed in two lines --%>
<c:set var="headerLinksInTwoLines" value="false"/>

<%@ include file="JSTLEnvironmentSetupExt.jspf" %>

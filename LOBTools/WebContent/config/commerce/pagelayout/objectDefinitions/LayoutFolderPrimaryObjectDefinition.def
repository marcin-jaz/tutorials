<?xml version="1.0" encoding="UTF-8"?>

<!--
 =================================================================
  Licensed Materials - Property of IBM

  WebSphere Commerce

  (C) Copyright IBM Corp. 2013 All Rights Reserved.

  US Government Users Restricted Rights - Use, duplication or
  disclosure restricted by GSA ADP Schedule Contract with
  IBM Corp.
 =================================================================
-->

<Definitions> 
	<!---
            This definition defines the base object from which LayoutFolder and InheritedLayoutFolder are derived.
            A Layout folder is an object used to organize Layouts so that they can be found easily.
            Layouts can only be in one folder at a time.
            This class uses a reference object definition to define the relationship between folders and Layouts.
            Layout folders use the Folder noun from the file wc-infrastructure-clientobjects.xml
            which contains information on how the parameters in the services
            are mapped to create the appropriate BOD for the Web services.
	-->

      <PrimaryObjectDefinition
            definitionName="plmBaseLayoutFolderPrimaryObjectDefinition"
            displayName="${plmPageLayoutResources.LayoutFolderObjectName}"
            displayNameProperty="identifier"
            helpLink="tasks/tpzpagecomposerfoldorg.htm"
            idProperty="folderId"
            isBaseDefinition="true"
            newDisplayName="${plmPageLayoutResources.LayoutFolder_newLayoutFolderDisplayName}"
            newObjectMenuItemText="${plmPageLayoutResources.contextMenuNewLayoutFolder}"
            objectGroups="LayoutFolderGroup"
            propertiesDefinitionName="plmLayoutFolderProperties"
            writeUsage="IBM_ManagePageComposerTool"
            utilitiesListDefinitionName="plmPageLayoutFolderBrowseGrid"> 
           
            <!--- This service retrieves all the child folders.  -->
            <GetChildrenService objectTypes="LayoutFolderReference,InheritedLayoutFolderReference" url="/cmc/GetChildFolders">
                  <ServiceParam name="storeId"/>
                  <ServiceParam name="folderId" propertyName="folderId"/>
                  <ServiceParam name="folderObjectType" value="LayoutFolder"/>
            </GetChildrenService>
           
            <!--- This service retrieves all the folder items that belong to this folder. -->
            <GetChildrenService objectTypes="LayoutFolderItemReference,LayoutFolderInheritedItemReference,InheritedLayoutFolderInheritedItemReference" url="/cmc/GetPageComposerFolderItems">
                  <ServiceParam name="storeId"/>
                  <ServiceParam name="assetStoreId"/>
                  <ServiceParam name="folderId" propertyName="folderId"/>
                  <ServiceParam name="defaultLanguageId"/>
            </GetChildrenService>
			
			<ObjectTypeFilter filterType="utilitiesViewFilter" objectTypes="LayoutFolderReference,InheritedLayoutFolderReference,LayoutFolderItemReference,LayoutFolderInheritedItemReference,InheritedLayoutFolderInheritedItemReference"/>
			
           	<!--- Update service to update a folder. -->
            <UpdateService url="/cmc/UpdateFolder">
                  <ServiceParam name="storeId" />
                  <ServiceParam name="objectStoreId" propertyName="objectStoreId"/>
                  <ServiceParam name="folderId" propertyName="folderId"/>
                  <ServiceParam name="parentFolderId" optional="true" parameterName="parentFolderId" parentProperty="true" propertyName="folderId"/>
            </UpdateService>
           
            <!---
                  Retrieves the plmBaseLayoutFolderPrimaryObjectDefinition object that is the parent to this object.
            -->
            <GetReferencesService url="/cmc/GetParentFolder">
                  <ServiceParam name="storeId"/>
                  <ServiceParam name="objectStoreId" propertyName="objectStoreId"/>
                  <ServiceParam name="folderId" propertyName="folderId"/>
                  <ServiceParam name="parentFolderId" propertyName="parentFolderId"/>
                  <ServiceParam name="folderObjectType" value="LayoutFolder"/>
            </GetReferencesService>
           
            <!-- Refresh Service to reload the properties of the folder -->
            <RefreshService url="/cmc/GetFolderById">
            <ServiceParam name="storeId"/>
            <ServiceParam name="folderId" propertyName="folderId"/>
            <ServiceParam name="folderObjectType" value="LayoutFolder"/>
            </RefreshService>
           
            <!--- This is the folder_id defined in the FOLDER table, which indicates the primary key of this folder. -->
            <PropertyDefinition copyProtected="true" propertyName="folderId"/>
           
            <!--- This is the identifier of the folder. -->
            <PropertyDefinition displayName="${plmPageLayoutResources.LayoutFolder_name}" maximumSize="256" propertyName="identifier" required="true" trim="true"/>
           
            <!--- This is the description of the folder. -->
            <PropertyDefinition displayName="${plmPageLayoutResources.LayoutFolder_description}" maximumSize="256" propertyName="description" type="string"/>
           
            <Xml name="template">
                  <folderType>IBM_LayoutFolder</folderType>              
            </Xml>
            
            <!--- Reference to the parent of the folder. -->
            <ParentReferenceObjectDefinition cascadeDelete="true" baseDefinitionName="plmLayoutFolderReferenceObjectDefinition"/>
            
            <!--- Navigation list definition for navigating from the folder item to the Layout. -->
            <NavigationListDefinition baseDefinitionName="plmLayoutFolderItemGridChildList" isDefault="true"/>
            
            <!--- Navigation list definition for navigating from the folder to its child items. -->
            <NavigationListDefinition baseDefinitionName="plmLayoutFolderGridChildList" toolbarIcon="folderListToolbarIcon"/>  
			
            <!--- This navigation list definition is used to display Page Layout Folder Calendar View -->
            <NavigationListDefinition baseDefinitionName="plmPageLayoutFolderGanttChartChildList"/> 
            
      </PrimaryObjectDefinition>
      
      <!--
            Defines the object to be used to represent folders owned by the local store.
       -->
      <PrimaryObjectDefinition baseDefinitionName="plmBaseLayoutFolderPrimaryObjectDefinition" creatable="true" definitionName="LayoutFolder" objectType="LayoutFolder" headerIcon="GenericFolderHeaderIcon" icon="GenericFolderIcon">
      		<!--- Create service to create a folder and its relationship to a parent folder.. -->
            <CreateService url="/cmc/CreateFolder">
                  <ServiceParam name="storeId" />
                  <ServiceParam name="objectStoreId" propertyName="objectStoreId"/>
                  <ServiceParam name="parentFolderId" optional="false" parameterName="parentFolderId" parentProperty="true" propertyName="folderId">
                  		<EnablementCondition conditionId="enableParentFolderId" negate="true" enablementValue="" propertyName="identifier" parentProperty="true"/>
                  </ServiceParam>
            </CreateService>
      		
      		<!--- Delete service to delete a folder. -->
            <DeleteService url="/cmc/DeleteFolder">
                  <ServiceParam name="storeId" />
                  <ServiceParam name="folderId" propertyName="folderId"/> 
            </DeleteService>
      		
            <TrueEnablementCondition /> 
      		
            <!--- Collection reference to the items that belong to the folder and are owned by the local store. -->
            <CollectionReferenceObjectDefinition baseDefinitionName="plmLayoutFolderItemReferenceObjectDefinition"/>
           
            <!--- Collection reference to the items that belong to the folder and are owned by the asset store. -->
            <CollectionReferenceObjectDefinition baseDefinitionName="plmLayoutFolderInheritedItemReferenceObjectDefinition"/>
      </PrimaryObjectDefinition>
      
      <!--
            Defines the object to be used to represent folders owned by the asset store.
       -->
      <PrimaryObjectDefinition baseDefinitionName="plmBaseLayoutFolderPrimaryObjectDefinition" compatibleObjectTypes="LayoutFolder" creatable="false" definitionName="InheritedLayoutFolder" objectType="InheritedLayoutFolder" headerIcon="InheritedGenericFolderHeaderIcon" icon="InheritedGenericFolderIcon">
            <!--- Reference to the parent of the folder. -->
            <ParentReferenceObjectDefinition baseDefinitionName="plmInheritedLayoutFolderReferenceObjectDefinition"/>
 
            <!--- Collection reference to the items that belong to the folder and are owned by the asset store. -->
            <CollectionReferenceObjectDefinition baseDefinitionName="plmInheritedLayoutFolderInheritedItemReferenceObjectDefinition"/>
      </PrimaryObjectDefinition>
      
      <!-- The relationship between this folder and its local parent -->           
      <ParentReferenceObjectDefinition definitionName="plmLayoutFolderReferenceObjectDefinition" derivedId="true" idProperty="folderReferenceId" objectGroups="LayoutFolderReferenceGroup" objectType="LayoutFolderReference" referencedType="LayoutFolder" cascadeDelete="true"/>
      
      <!-- The relationship between this folder and its asset store parent -->
      <ParentReferenceObjectDefinition definitionName="plmInheritedLayoutFolderReferenceObjectDefinition" derivedId="true" idProperty="folderReferenceId" objectGroups="LayoutFolderReferenceGroup" objectType="InheritedLayoutFolderReference" referencedType="InheritedLayoutFolder" cascadeDelete="true"/>
      
      <!-- The relationship between a folder and local Layout in this folder. -->
      <CollectionReferenceObjectDefinition baseDefinitionName="plmBaseLayoutFolderItemReferenceObjectDefinition" initializeObjectStoreId="true"  objectGroups="LayoutFolderItemReferenceGroup" definitionName="plmLayoutFolderItemReferenceObjectDefinition" objectType="LayoutFolderItemReference" referencedTypes="PageLayout">
            <TrueEnablementCondition  conditionType="childObjectCondition"/>
      </CollectionReferenceObjectDefinition>
      
      <!-- The relationship between this folder and asset store Layout in this folder. -->
      <CollectionReferenceObjectDefinition baseDefinitionName="plmBaseLayoutFolderItemReferenceObjectDefinition" initializeObjectStoreId="true" objectGroups="LayoutFolderItemReferenceGroup" definitionName="plmLayoutFolderInheritedItemReferenceObjectDefinition" objectType="LayoutFolderInheritedItemReference" referencedTypes="InheritedPageLayout">
            <TrueEnablementCondition conditionType="childObjectCondition"/>
      </CollectionReferenceObjectDefinition>
      
      <!-- The relationship between an inherited folder and an inherited Layout in this folder. -->
      <CollectionReferenceObjectDefinition baseDefinitionName="plmBaseLayoutFolderItemReferenceObjectDefinition" objectGroups="LayoutFolderItemReferenceGroup" definitionName="plmInheritedLayoutFolderInheritedItemReferenceObjectDefinition" objectType="InheritedLayoutFolderInheritedItemReference" referencedTypes="InheritedPageLayout">
            <TrueEnablementCondition conditionType="childObjectCondition"/>
      </CollectionReferenceObjectDefinition>
     
      <!-- The class to represent relationships between folders and Layout. These relationships are called folder items. -->
      <CollectionReferenceObjectDefinition definitionName="plmBaseLayoutFolderItemReferenceObjectDefinition" isBaseDefinition="true" idProperty="folderItemID" alwaysAllowMove="false">
            <!--- Create service to create the relationship between the parent folder and folder item reference. -->
            <CreateService url="/cmc/CreateFolderItemReference">
                  <ServiceParam name="storeId"/>
                  <ServiceParam name="objectStoreId" parentProperty="true" propertyName="objectStoreId"/>
                  <ServiceParam name="folderItemStoreId" parameterName="folderItemStoreId" propertyName="objectStoreId" objectPath="PageLayoutAlias"/>
                  <ServiceParam name="folderId" parentProperty="true" propertyName="folderId"/>
                  <ServiceParam name="folderItemReferenceId" propertyName="pageLayoutId" objectPath="PageLayoutAlias" />
            </CreateService>
            
            <!--- Delete service to delete the relationship between the parent folder and folder item reference. -->
            <DeleteService url="/cmc/DeleteFolderItemReference">
                  <ServiceParam name="storeId"/>
                  <ServiceParam name="folderItemStoreId" parameterName="folderItemStoreId" propertyName="objectStoreId" objectPath="PageLayoutAlias"/>
                  <ServiceParam name="folderId" parentProperty="true" propertyName="folderId"/>
                  <ServiceParam name="folderItemReferenceId" propertyName="pageLayoutId" objectPath="PageLayoutAlias" />
                  <ServiceParam name="folderItemType" propertyName="folderItemType"/>
            </DeleteService>
 
            <TrueEnablementCondition conditionId="objectTypeFolderCondition" conditionType="childObjectCondition"/>
            
            <Xml name="template">
                  <folderItemType>LayoutType</folderItemType>
            </Xml>           
      </CollectionReferenceObjectDefinition>

</Definitions>
